cmake_minimum_required(VERSION 3.1)
project(CMakeDemo)

function(prepare_sdl url filename hash_type hash extracted_dir)

file(DOWNLOAD ${url} ${filename}
   TIMEOUT 600  # seconds
   SHOW_PROGRESS
   EXPECTED_HASH ${hash_type}=${hash}
   TLS_VERIFY ON)

if(NOT EXISTS ${extracted_dir})
  file(ARCHIVE_EXTRACT INPUT ${filename}
    DESTINATION ${CMAKE_SOURCE_DIR}/extern/downloads/sdl2)
endif()

if(EXISTS ${extracted_dir})
  message("jest sdl")
endif()
   
endfunction(prepare_sdl)


set(CMAKE_SDL_PATH "${CMAKE_SOURCE_DIR}/extern/SDL2")
set(CMAKE_SDL_INCLUDE_PATH "${CMAKE_SDL_PATH}/include")
set(CMAKE_SDL_LIB_PATH "${CMAKE_SDL_PATH}/lib/x64-static")


set(SDL_URL "https://www.libsdl.org/release/SDL2-2.0.12.zip")
set(SDL_DOWNLOAD_DEST ${CMAKE_SOURCE_DIR}/extern/downloads/sdl2/sdl2.zip)
set(SDL_DOWNLOAD_HASH_TYPE SHA1)
set(SDL_DOWNLOAD_HASH_VALUE 3ed5a7de726f9a2a3c8f7aaa62474901bb3f49ab)
set(SDL_EXTRACTED_DIR ${CMAKE_SOURCE_DIR}/extern/downloads/sdl2/SDL2-2.0.12)


message("sdl include path: ${CMAKE_SDL_INCLUDE_PATH}")

prepare_sdl(
  ${SDL_URL}
  ${SDL_DOWNLOAD_DEST}
  ${SDL_DOWNLOAD_HASH_TYPE} ${SDL_DOWNLOAD_HASH_VALUE}
  ${SDL_EXTRACTED_DIR})

  
# Define executable target
include_directories(${CMAKE_SDL_INCLUDE_PATH})
add_executable(CMakeDemo main.cpp)

target_link_libraries(CMakeDemo ${CMAKE_SDL_LIB_PATH}/SDL2-static.lib ${CMAKE_SDL_LIB_PATH}/SDL2main.lib winmm.lib imm32.lib version.lib Setupapi.lib)